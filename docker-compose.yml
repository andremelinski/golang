# https://go.dev/doc/tutorial/database-access
# https://dakaii.medium.com/repository-pattern-in-golang-d22d3fa76d91
# https://techinscribed.com/different-approaches-to-pass-database-connection-into-controllers-in-golang/?source=post_page-----d22d3fa76d91--------------------------------
# https://dev.to/stevensunflash/a-working-solution-to-jwt-creation-and-invalidation-in-golang-4oe4
# https://dev.to/stevensunflash/using-domain-driven-design-ddd-in-golang-3ee5
version: '3.6'
services:
  mongo:
    container_name: mongoDB
    image: mongo:latest
    command: mongod --auth
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
#   db:
#     image: mysql:latest # use latest version of mysql
#     container_name: db # add a name for the container
#     command: --default-authentication-plugin=mysql_native_password
#     restart: unless-stopped
#     environment: # add default values, see docs for more info.
#       MYSQL_USER: user
#       MYSQL_ROOT_PASSWORD: mypassword
#       MYSQL_PASSWORD: mypassword
#       MYSQL_DATABASE: testdb # create this database on startup
#     volumes:
#       - my-db:/var/lib/mysql
#     ports:
#       - '3306:3306'
 
# volumes: # add volume to persist data.
#   my-db:
